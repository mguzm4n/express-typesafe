/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Courses {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<Int8>;
  name: string | null;
}

export interface CoursesUnits {
  courseId: Int8;
  createdAt: Generated<Timestamp>;
  orderIndex: number | null;
  unitId: Int8;
}

export interface Lessons {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<Int8>;
  name: string | null;
}

export interface Units {
  createdAt: Generated<Timestamp>;
  description: string | null;
  id: Generated<Int8>;
  name: string | null;
}

export interface UnitsLessons {
  createdAt: Generated<Timestamp>;
  lessonId: Int8;
  orderIndex: number | null;
  unitId: Int8;
}

export interface DB {
  courses: Courses;
  coursesUnits: CoursesUnits;
  lessons: Lessons;
  units: Units;
  unitsLessons: UnitsLessons;
}
